{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactcourse\\\\northwind-redux\\\\src\\\\components\\\\categories\\\\CategoryList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\nimport { bindActionCreators } from \"redux\";\nimport * as categoryActions from \"../../redux/actions/categoryActions\";\nimport { Badge } from \"reactstrap\";\nimport * as productActions from \"../../redux/actions/productActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CategoryList extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.selectCategory = category => {\n      this.props.actions.changeCategory(category);\n    };\n  }\n\n  componentDidMount() {\n    this.props.actions.getCategories();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(Badge, {\n          color: \"warning\",\n          children: \"Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: this.props.categories.map(category => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          active: category.id === this.props.currentCategory.id,\n          onClick: () => this.selectCategory(category),\n          children: category.categoryName\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentCategory: state.changeCategoryReducer,\n    categories: state.categoryListReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      getCategories: bindActionCreators(categoryActions.getCategories, dispatch),\n      changeCategory: bindActionCreators(categoryActions.changeCategory, dispatch),\n      getProducts: bindActionCreators(productActions.getProducts, dispatch)\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryList);","map":{"version":3,"sources":["C:/reactcourse/northwind-redux/src/components/categories/CategoryList.js"],"names":["React","Component","connect","ListGroup","ListGroupItem","bindActionCreators","categoryActions","Badge","productActions","CategoryList","selectCategory","category","props","actions","changeCategory","componentDidMount","getCategories","render","categories","map","id","currentCategory","categoryName","mapStateToProps","state","changeCategoryReducer","categoryListReducer","mapDispatchToProps","dispatch","getProducts"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,YAAzC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,eAAZ,MAAiC,qCAAjC;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAO,KAAKC,cAAZ,MAAgC,oCAAhC;;;AAEA,MAAMC,YAAN,SAA2BR,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAKnCS,cALmC,GAKjBC,QAAD,IAAc;AAC7B,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,cAAnB,CAAkCH,QAAlC;AACD,KAPkC;AAAA;;AACnCI,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,KAAL,CAAWC,OAAX,CAAmBG,aAAnB;AACD;;AAKDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAC4C,GAD5C;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,SAAD;AAAA,kBACG,KAAKL,KAAL,CAAWM,UAAX,CAAsBC,GAAtB,CAA2BR,QAAD,iBACzB,QAAC,aAAD;AACE,UAAA,MAAM,EAAEA,QAAQ,CAACS,EAAT,KAAgB,KAAKR,KAAL,CAAWS,eAAX,CAA2BD,EADrD;AAEE,UAAA,OAAO,EAAE,MAAM,KAAKV,cAAL,CAAoBC,QAApB,CAFjB;AAAA,oBAKGA,QAAQ,CAACW;AALZ,WAGOX,QAAQ,CAACS,EAHhB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AA3BkC;;AA8BrC,SAASG,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLH,IAAAA,eAAe,EAAEG,KAAK,CAACC,qBADlB;AAELP,IAAAA,UAAU,EAAEM,KAAK,CAACE;AAFb,GAAP;AAID;;AACD,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLf,IAAAA,OAAO,EAAE;AACPG,MAAAA,aAAa,EAAEX,kBAAkB,CAC/BC,eAAe,CAACU,aADe,EAE/BY,QAF+B,CAD1B;AAKPd,MAAAA,cAAc,EAAET,kBAAkB,CAChCC,eAAe,CAACQ,cADgB,EAEhCc,QAFgC,CAL3B;AASPC,MAAAA,WAAW,EAAExB,kBAAkB,CAACG,cAAc,CAACqB,WAAhB,EAA6BD,QAA7B;AATxB;AADJ,GAAP;AAaD;;AAED,eAAe1B,OAAO,CAACqB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6ClB,YAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as categoryActions from \"../../redux/actions/categoryActions\";\r\nimport { Badge } from \"reactstrap\";\r\nimport * as productActions from \"../../redux/actions/productActions\";\r\n\r\nclass CategoryList extends Component {\r\n  componentDidMount() {\r\n    this.props.actions.getCategories();\r\n  }\r\n\r\n  selectCategory = (category) => {\r\n    this.props.actions.changeCategory(category);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>\r\n          <Badge color=\"warning\">Categories</Badge>{\" \"}\r\n        </h3>\r\n        <ListGroup>\r\n          {this.props.categories.map((category) => (\r\n            <ListGroupItem\r\n              active={category.id === this.props.currentCategory.id}\r\n              onClick={() => this.selectCategory(category)}\r\n              key={category.id}\r\n            >\r\n              {category.categoryName}\r\n            </ListGroupItem>\r\n          ))}\r\n        </ListGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentCategory: state.changeCategoryReducer,\r\n    categories: state.categoryListReducer,\r\n  };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      getCategories: bindActionCreators(\r\n        categoryActions.getCategories,\r\n        dispatch\r\n      ),\r\n      changeCategory: bindActionCreators(\r\n        categoryActions.changeCategory,\r\n        dispatch\r\n      ),\r\n      getProducts: bindActionCreators(productActions.getProducts, dispatch),\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryList);\r\n"]},"metadata":{},"sourceType":"module"}