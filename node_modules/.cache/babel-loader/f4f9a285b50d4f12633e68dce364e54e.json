{"ast":null,"code":"import _objectSpread from\"C:/antepurunleri/antep-urunleri/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:/antepurunleri/antep-urunleri/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import*as actionTypes from\"../actions/actionTypes\";import initialState from\"./initialState\";export default function cartReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState.cart;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actionTypes.ADD_TO_CART:var addedItem=state.find(function(c){return c.product.id===action.payload.product.id;});if(addedItem){var newState=state.map(function(cartItem){if(cartItem.product.id===action.payload.product.id){return Object.assign({},addedItem,{quantity:addedItem.quantity+1});}return cartItem;});return newState;}else{return[].concat(_toConsumableArray(state),[_objectSpread({},action.payload)]);}case actionTypes.REMOVE_FROM_CART:var newState2=state.filter(function(cartItem){return cartItem.product.id!==action.payload.id;});return newState2;default:return state;}}","map":{"version":3,"sources":["C:/antepurunleri/antep-urunleri/src/redux/reducers/cartReducer.js"],"names":["actionTypes","initialState","cartReducer","state","cart","action","type","ADD_TO_CART","addedItem","find","c","product","id","payload","newState","map","cartItem","Object","assign","quantity","REMOVE_FROM_CART","newState2","filter"],"mappings":"2OAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,wBAA7B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,cAAe,SAASC,CAAAA,WAAT,EAAwD,IAAnCC,CAAAA,KAAmC,2DAA3BF,YAAY,CAACG,IAAc,IAARC,CAAAA,MAAQ,2CACrE,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKN,CAAAA,WAAW,CAACO,WAAjB,CACE,GAAIC,CAAAA,SAAS,CAAGL,KAAK,CAACM,IAAN,CACd,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,OAAF,CAAUC,EAAV,GAAiBP,MAAM,CAACQ,OAAP,CAAeF,OAAf,CAAuBC,EAA/C,EADc,CAAhB,CAGA,GAAIJ,SAAJ,CAAe,CACb,GAAIM,CAAAA,QAAQ,CAAGX,KAAK,CAACY,GAAN,CAAU,SAACC,QAAD,CAAc,CACrC,GAAIA,QAAQ,CAACL,OAAT,CAAiBC,EAAjB,GAAwBP,MAAM,CAACQ,OAAP,CAAeF,OAAf,CAAuBC,EAAnD,CAAuD,CACrD,MAAOK,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBV,SAAlB,CAA6B,CAClCW,QAAQ,CAAEX,SAAS,CAACW,QAAV,CAAqB,CADG,CAA7B,CAAP,CAGD,CACD,MAAOH,CAAAA,QAAP,CACD,CAPc,CAAf,CAQA,MAAOF,CAAAA,QAAP,CACD,CAVD,IAUO,CACL,mCAAWX,KAAX,oBAAuBE,MAAM,CAACQ,OAA9B,IACD,CACH,IAAKb,CAAAA,WAAW,CAACoB,gBAAjB,CACE,GAAMC,CAAAA,SAAS,CAAGlB,KAAK,CAACmB,MAAN,CAChB,SAACN,QAAD,QAAcA,CAAAA,QAAQ,CAACL,OAAT,CAAiBC,EAAjB,GAAwBP,MAAM,CAACQ,OAAP,CAAeD,EAArD,EADgB,CAAlB,CAGA,MAAOS,CAAAA,SAAP,CACF,QACE,MAAOlB,CAAAA,KAAP,CAxBJ,CA0BD","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function cartReducer(state = initialState.cart, action) {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_TO_CART:\r\n      var addedItem = state.find(\r\n        (c) => c.product.id === action.payload.product.id\r\n      );\r\n      if (addedItem) {\r\n        var newState = state.map((cartItem) => {\r\n          if (cartItem.product.id === action.payload.product.id) {\r\n            return Object.assign({}, addedItem, {\r\n              quantity: addedItem.quantity + 1,\r\n            });\r\n          }\r\n          return cartItem;\r\n        });\r\n        return newState;\r\n      } else {\r\n        return [...state, { ...action.payload }];\r\n      }\r\n    case actionTypes.REMOVE_FROM_CART:\r\n      const newState2 = state.filter(\r\n        (cartItem) => cartItem.product.id !== action.payload.id\r\n      );\r\n      return newState2;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}