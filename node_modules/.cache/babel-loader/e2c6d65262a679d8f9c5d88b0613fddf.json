{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactcourse\\\\northwind-redux\\\\src\\\\components\\\\products\\\\ProductList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Badge } from \"reactstrap\";\nimport { bindActionCreators } from \"redux\";\nimport * as productActions from \"../../redux/actions/productActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProductList extends Component {\n  componentDidMount() {\n    this.props.actions.getProducts;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(Badge, {\n          color: \"warning\",\n          children: \"Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Badge, {\n          color: \"success\",\n          children: this.props.currentCategory.categoryName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentCategory: state.changeCategoryReducer,\n    products: state.productListReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      getProducts: bindActionCreators(productActions.getProducts, dispatch)\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);","map":{"version":3,"sources":["C:/reactcourse/northwind-redux/src/components/products/ProductList.js"],"names":["React","Component","connect","Badge","bindActionCreators","productActions","ProductList","componentDidMount","props","actions","getProducts","render","currentCategory","categoryName","mapStateToProps","state","changeCategoryReducer","products","productListReducer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,cAAZ,MAAgC,oCAAhC;;;AAGA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAClCM,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWC,OAAX,CAAmBC,WAAnB;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAC,SAAb;AAAA,oBACG,KAAKH,KAAL,CAAWI,eAAX,CAA2BC;AAD9B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAfiC;;AAkBpC,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLH,IAAAA,eAAe,EAAEG,KAAK,CAACC,qBADlB;AAELC,IAAAA,QAAQ,EAAEF,KAAK,CAACG;AAFX,GAAP;AAID;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLX,IAAAA,OAAO,EAAE;AACPC,MAAAA,WAAW,EAAEN,kBAAkB,CAC9BC,cAAc,CAACK,WADe,EACFU,QADE;AADxB;AADJ,GAAP;AAMD;;AACD,eAAelB,OAAO,CAACY,eAAD,EAAiBK,kBAAjB,CAAP,CAA4Cb,WAA5C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Badge } from \"reactstrap\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as productActions from \"../../redux/actions/productActions\";\r\n\r\n\r\nclass ProductList extends Component {\r\n  componentDidMount(){\r\n    this.props.actions.getProducts\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>\r\n          <Badge color=\"warning\">Products</Badge>\r\n          <Badge color=\"success\">\r\n            {this.props.currentCategory.categoryName}\r\n          </Badge>\r\n        </h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentCategory: state.changeCategoryReducer,\r\n    products: state.productListReducer,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      getProducts: bindActionCreators\r\n      (productActions.getProducts, dispatch),\r\n    },\r\n  };\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ProductList);\r\n"]},"metadata":{},"sourceType":"module"}