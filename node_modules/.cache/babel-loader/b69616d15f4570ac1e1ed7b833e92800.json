{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nexport function getProductsSuccess(products) {\n  return {\n    type: actionTypes.GET_PRODUCTS_SUCCESS,\n    payload: products\n  }; //getcategoriessuccess için yeni state'imiz categories olacak demek\n}\nexport function getProducts(categoryId) {\n  return function (dispatch) {\n    let url = \"http://localhost:3000/productss\";\n\n    if (categoryId) {\n      url = url + \"?categoryId=\" + categoryId;\n    }\n\n    return fetch(url).then(response => response.json()).then(result => dispatch(getProductsSuccess(result))); //dispatch=yakalamak,ele geçirmek\n  };\n}\nde;","map":{"version":3,"sources":["C:/reactcourse/northwind-redux/src/redux/actions/productActions.js"],"names":["actionTypes","getProductsSuccess","products","type","GET_PRODUCTS_SUCCESS","payload","getProducts","categoryId","dispatch","url","fetch","then","response","json","result","de"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAGA,OAAO,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACxC,SAAO;AAAEC,IAAAA,IAAI,EAAEH,WAAW,CAACI,oBAApB;AAA0CC,IAAAA,OAAO,EAAEH;AAAnD,GAAP,CADwC,CAExC;AACD;AAED,OAAO,SAASI,WAAT,CAAqBC,UAArB,EAAiC;AACtC,SAAO,UAAUC,QAAV,EAAoB;AACzB,QAAIC,GAAG,GAAG,iCAAV;;AACA,QAAGF,UAAH,EAAc;AACZE,MAAAA,GAAG,GAAEA,GAAG,GAAE,cAAL,GAAqBF,UAA1B;AACD;;AACD,WAAOG,KAAK,CAACD,GAAD,CAAL,CACJE,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADb,EAEJF,IAFI,CAECG,MAAM,IAAIN,QAAQ,CAACP,kBAAkB,CAACa,MAAD,CAAnB,CAFnB,CAAP,CALyB,CAOgC;AAC1D,GARD;AASD;AAEDC,EAAE","sourcesContent":["import * as actionTypes from \"./actionTypes\";\r\n\r\n\r\nexport function getProductsSuccess(products) {\r\n     return { type: actionTypes.GET_PRODUCTS_SUCCESS, payload: products }; \r\n     //getcategoriessuccess için yeni state'imiz categories olacak demek\r\n   }\r\n   \r\n   export function getProducts(categoryId) {\r\n     return function (dispatch) {      \r\n       let url = \"http://localhost:3000/productss\";\r\n       if(categoryId){\r\n         url= url+ \"?categoryId=\" +categoryId\r\n       }\r\n       return fetch(url)\r\n         .then(response => response.json())\r\n         .then(result => dispatch(getProductsSuccess(result))); //dispatch=yakalamak,ele geçirmek\r\n     };\r\n   }\r\n\r\n   de"]},"metadata":{},"sourceType":"module"}